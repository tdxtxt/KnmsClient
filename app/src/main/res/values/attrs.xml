<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
        <attr name="border_overlay" format="boolean" />
        <attr name="fill_color" format="color" />
    </declare-styleable>

    <declare-styleable name="RotateLoading">
        <attr name="loading_width" format="dimension"/>
        <attr name="loading_color" format="color"/>
        <attr name="shadow_offset" format="dimension"/>
        <attr name="loading_visible" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="PullToRefresh">
        <!-- 设置整个刷新列表的背景色 -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />
        <!--  设置下拉Header或者上拉Footer的背景色 -->
        <attr name="ptrHeaderBackground" format="reference|color" />
        <!-- 用于设置Header与Footer中文本的颜色 -->
        <attr name="ptrHeaderTextColor" format="reference|color" />
        <!-- 用于设置Header与Footer中上次刷新时间的颜色 -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" /><!-- 禁用下拉刷新 -->
            <flag name="pullFromStart" value="0x1" /><!-- 仅支持下拉刷新 -->
            <flag name="pullFromEnd" value="0x2" /><!-- 仅支持上拉刷新 -->
            <flag name="both" value="0x3" /><!-- 上拉刷新和下拉刷新都支持 -->
            <flag name="manualOnly" value="0x4" /><!-- 只允许手动触发 -->

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- 如果为true会在mPullRefreshListView中出现icon，右上角和右下角，挺有意思的 -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- 同时改变头部和底部的图标 -->
        <attr name="ptrDrawable" format="reference" />

        <!-- 头部视图的图标-->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- 底部视图的图标 -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- 分别设置拉Header或者上拉Footer中字体的类型颜色等等 -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" /><!-- flip（翻转动画）， rotate（旋转动画）  -->
            <flag name="flip" value="0x1" />
        </attr>

        <!-- 刷新的时候，是否允许ListView或GridView滚动 -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!-- 决定了Header，Footer以何种方式加入mPullRefreshListView，true为headView方式加入，就是滚动时刷新头部会一起滚动 -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
        <attr name="ptrIsShowLoadMoreView" format="boolean"/>
        <attr name="ptrIsShowRefreshView" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="ExpandableMenuOverlay">

        <!-- DIALOG OVERLAY -->
        <attr name="adjustViewSize" format="boolean" />
        <attr name="dimAmount" format="float" />

        <!-- MENU BUTTON SIZE -->
        <attr name="mainButtonSize" format="float" />
        <attr name="otherButtonSize" format="float" />
        <attr name="distanceY" format="float" />
        <attr name="distanceX" format="float" />
        <attr name="bottomPad" format="float" />

        <!-- MENU BUTTON RESOURCES -->
        <attr name="closeButtonSrc" format="integer" />
        <attr name="leftButtonSrc" format="integer" />
        <attr name="leftButtonText" format="integer" />
        <attr name="midButtonSrc" format="integer" />
        <attr name="midButtonText" format="integer" />
        <attr name="rightButtonSrc" format="integer" />
        <attr name="rightButtonText" format="integer" />
    </declare-styleable>
    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPaddingTopBottom" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <!--该属性表示里面的TAB是否均分整个PagerSlidingTabStrip控件的宽,true是,false不均分,从左到右排列,默认false-->
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
        <attr name="pstsTextSelectedColor" format="color"/>
        <!--缩放的最大值,0.3表示放大后最大是原来的0.3倍,默认未0.3-->
        <attr name="pstsScaleZoomMax" format="float"/>
        <attr name="pstsSmoothScrollWhenClickTab" format="boolean"/>
        <attr name="pstsUnderTextColor" format="color" />
        <!-- 宽为match_parent ，指示器的宽需手动计算的问题,这个属性设置为true,则指示器的位置和字体的宽一样-->
        <!--    <attr name="pstsIndicatorWrap" format="boolean" />-->
    </declare-styleable>
    <declare-styleable name="TagFlowLayout">
        <attr name="auto_select_effect" format="boolean"></attr>
        <attr name="max_select" format="integer"></attr>
        <attr name="gravity">
            <enum name="left" value="-1" />
            <enum name="center" value="0" />
            <enum name="right" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="QRCodeView">
        <!-- 扫描框距离toolbar底部的距离，默认值为90dp -->
        <attr name="qrcv_topOffset" format="dimension|reference" />
        <!-- 扫描框边角线的宽度，默认值为3dp -->
        <attr name="qrcv_cornerSize" format="dimension|reference" />
        <!-- 扫描框边角线的长度，默认值为20dp -->
        <attr name="qrcv_cornerLength" format="dimension|reference" />
        <!-- 扫描框边角线的颜色，默认值为@android:color/white -->
        <attr name="qrcv_cornerColor" format="color|reference" />
        <!-- 扫描框的宽度，默认值为200dp -->
        <attr name="qrcv_rectWidth" format="dimension|reference" />
        <!-- 条码扫样式描框的高度，默认值为140dp -->
        <attr name="qrcv_barcodeRectHeight" format="dimension|reference" />
        <!-- 除去扫描框，其余部分阴影颜色，默认值为#33FFFFFF -->
        <attr name="qrcv_maskColor" format="color|reference" />
        <!-- 扫描线的宽度，默认值为1dp -->
        <attr name="qrcv_scanLineSize" format="dimension|reference" />
        <!-- 扫描线的颜色，默认值为@android:color/white -->
        <attr name="qrcv_scanLineColor" format="color|reference" />
        <!-- 扫描线距离上下或者左右边框的间距，默认值为0dp -->
        <attr name="qrcv_scanLineMargin" format="dimension|reference" />
        <!-- 是否显示默认的图片扫描线，默认值为false -->
        <attr name="qrcv_isShowDefaultScanLineDrawable" format="boolean" />
        <!-- 扫描线的图片资源，默认值为null -->
        <attr name="qrcv_customScanLineDrawable" format="reference" />
        <!-- 扫描边框的宽度，默认值为1dp -->
        <attr name="qrcv_borderSize" format="dimension|reference" />
        <!-- 扫描边框的颜色，默认值为@android:color/white -->
        <attr name="qrcv_borderColor" format="color|reference" />
        <!-- 扫描线从顶部移动到底部的动画时间，默认值为1000 -->
        <attr name="qrcv_animTime" format="integer" />
        <!-- 扫描框是否垂直居中，该属性为true时会忽略qrcv_topOffset属性，默认值为false -->
        <attr name="qrcv_isCenterVertical" format="boolean" />
        <!-- Toolbar的高度，当有设置qrcv_isCenterVertical属性时，通过该属性来修正有Toolbar时导致扫描框垂直居中的偏差，默认值为0dp -->
        <attr name="qrcv_toolbarHeight" format="dimension|reference" />
        <!-- 是否是扫条形码，默认值为false -->
        <attr name="qrcv_isBarcode" format="boolean" />
        <!-- 扫描二维码时的提示文案，默认值为null -->
        <attr name="qrcv_qrCodeTipText" format="string|reference" />
        <!-- 扫描条码时的提示文案，默认值为null -->
        <attr name="qrcv_barCodeTipText" format="string|reference" />
        <!-- 提示文案字体大小，默认值为14sp -->
        <attr name="qrcv_tipTextSize" format="dimension|reference" />
        <!-- 提示文案颜色，默认值为@android:color/white -->
        <attr name="qrcv_tipTextColor" format="color|reference" />
        <!-- 提示文案是否在扫描框的底部，默认值为false -->
        <attr name="qrcv_isTipTextBelowRect" format="boolean" />
        <!-- 提示文案与扫描框之间的间距，默认值为20dp -->
        <attr name="qrcv_tipTextMargin" format="dimension|reference" />
        <!-- 是否把提示文案作为单行显示，默认值为false -->
        <attr name="qrcv_isShowTipTextAsSingleLine" format="boolean" />
        <!-- 是否显示提示文案的背景，默认值为false -->
        <attr name="qrcv_isShowTipBackground" format="boolean" />
        <!-- 提示文案的背景色，默认值为#22000000 -->
        <attr name="qrcv_tipBackgroundColor" format="color|reference" />
        <!-- 扫描线是否来回移动，默认值为true -->
        <attr name="qrcv_isScanLineReverse" format="boolean" />
        <!-- 是否显示默认的网格图片扫描线，默认值为false -->
        <attr name="qrcv_isShowDefaultGridScanLineDrawable" format="boolean" />
        <!-- 扫描线的网格图片资源，默认值为null -->
        <attr name="qrcv_customGridScanLineDrawable" format="reference" />
        <!-- 是否只识别扫描框区域的二维码，默认值为false -->
        <attr name="qrcv_isOnlyDecodeScanBoxArea" format="boolean" />
    </declare-styleable>
    <declare-styleable name="PxBlurringView">
        <attr name="blurRadius" format="integer" />
        <attr name="downsampleFactor" format="integer" />
        <attr name="overlayColor" format="color" />
    </declare-styleable>
    <declare-styleable name="StickNavLayout">
        <!--默认是否悬停tab-->
        <attr name="isStickNav" format="boolean" />
        <!--距离悬浮的位置-->
        <attr name="stickOffset" format="dimension" />
    </declare-styleable>
    <declare-styleable name="FlikerProgressBar">
        <attr name="textSize" format="dimension|reference"/>
        <attr name="loadingColor" format="color|reference"/>
        <attr name="stopColor" format="color|reference"/>
    </declare-styleable>

    <declare-styleable name="timerbutton">
        <attr name="afterText" format="string" />
        <attr name="ms" format="integer" />
    </declare-styleable>

    <declare-styleable name="CirclePercentViews">
        <attr name="circleRadius" format="dimension"/>
        <attr name="stripeWidth" format="dimension"/><!--&lt;!&ndash;色带宽度&ndash;&gt;-->
        <attr name="percent" format="integer"/><!--&lt;!&ndash;百分比 最大值为100&ndash;&gt;-->
        <attr name="smallColor" format="color"/><!--&lt;!&ndash;色带宽度&ndash;&gt;-->
        <attr name="bigColor" format="color"/>   <!--&lt;!&ndash;外圈颜色&ndash;&gt;-->
        <attr name="centerTextSize" format="dimension"/><!--  &lt;!&ndash;中间字体颜色&ndash;&gt;-->
    </declare-styleable>
    <!-- 自定义星星属性 -->
    <declare-styleable name="star">
        <!--星星选择数量-->
        <attr format="float" name="startMark"></attr>
        <!--星星数量-->
        <attr format="integer" name="starsNum"></attr>
        <!--星星宽度-->
        <attr format="dimension" name="starWidth"></attr>
        <!--星星高度-->
        <attr format="dimension" name="starHeight"></attr>
        <!--星星间距-->
        <attr format="dimension" name="starDistance"></attr>
        <!--星星背景 -->
        <attr format="reference" name="starBackground"></attr>
        <!--星星变化背景 -->
        <attr format="reference" name="starDrawBackground"></attr>
        <!--控件是否可以点击 -->
        <attr format="boolean" name="starClickable"></attr>
    </declare-styleable>
    <declare-styleable name="ExpandableTextView">
        <attr name="etv_MaxLinesOnShrink" format="reference|integer" />
        <attr name="etv_EllipsisHint" format="reference|string" /><!--default is ..-->
        <attr name="etv_ToExpandHint" format="reference|string" /><!--"to expand" hint string, default is "Expand"-->
        <attr name="etv_ToShrinkHint" format="reference|string" /><!--"to shrink" hint string, default is "Shrink"-->
        <attr name="etv_GapToExpandHint" format="reference|string" /><!--gap between "toExpandHint" and "trimmed text"-->
        <attr name="etv_GapToShrinkHint" format="reference|string" /><!--gap between "toShrinkHint" and "trimmed text"-->
        <attr name="etv_EnableToggle" format="reference|boolean" /><!--if toggle the state when click ExpandTextView-->
        <attr name="etv_ToExpandHintShow" format="reference|boolean" /><!--if show "toExpandHint"-->
        <attr name="etv_ToShrinkHintShow" format="reference|boolean" /><!--if show "toShrinkHint"-->
        <attr name="etv_Newline" format="reference|boolean" />
        <attr name="etv_ToExpandHintColor" format="reference|color" /><!--text color of "toExpandHint"-->
        <attr name="etv_ToShrinkHintColor" format="reference|color" /><!--text color of "toShrinkHint"-->
        <attr name="etv_ToExpandHintColorBgPressed" format="reference|color" /><!--background color if "toExpandHint" pressed-->
        <attr name="etv_ToShrinkHintColorBgPressed" format="reference|color" /><!--background color if "toShrinkHint" pressed-->
        <attr name="etv_InitState" format="enum"><!--init state, default is shrink-->
            <enum name="shrink" value="0"/>
            <enum name="expand" value="1"/>
        </attr>
        <!-- 另外一个控件的 -->
        <attr name="maxCollapsedLines" format="integer"/>
        <attr name="animDuration" format="integer"/>
        <attr name="animAlphaStart" format="float"/>
        <attr name="expandDrawable" format="reference"/>
        <attr name="collapseDrawable" format="reference"/>
    </declare-styleable>
    <declare-styleable name="TimeLineView">
        <attr name="startedLineColor" format="color"/>
        <attr name="preLineColor" format="color"/>
        <attr name="startedCircleColor" format="color"/>
        <attr name="underwayCircleColor" format="color"/>
        <attr name="preCircleColor" format="color"/>
        <attr name="startedStringColor" format="color"/>
        <attr name="underwayStringColor" format="color"/>
        <attr name="preStringColor" format="color"/>
        <attr name="tlv_TextSize" format="dimension"/>
        <attr name="tlv_radius" format="dimension"/>
        <attr name="tlv_lineWidth" format="dimension"/>
    </declare-styleable>
    <!-- 吸顶 -->
    <declare-styleable name="StickyScrollView">
        <attr name="stuckShadowHeight" format="dimension" />
        <attr name="stuckShadowDrawable" format="reference" />
    </declare-styleable>

    <declare-styleable name="HeaderViewPager">
        <attr name="hvp_topOffset" format="dimension"/>
    </declare-styleable>
    <declare-styleable name="ScrollViewTabIndicator">
        <attr name="tpi_tabPadding" format="reference|dimension"/>
        <attr name="tpi_indicatorColor" format="reference|color"/>
        <attr name="tpi_indicatorHeight" format="reference|dimension"/>
        <attr name="tpi_underLineColor" format="reference|color"/>
        <attr name="tpi_underLineHeight" format="reference|dimension"/>
        <attr name="tpi_indicatorMode" format="integer">
            <enum name="match_parent" value="-1"/>
            <enum name="wrap_content" value="-2"/>
        </attr>z
        <attr name="android:textAppearance"/>
        <attr name="tpi_tabBackground" format="reference"/>
        <attr name="tpi_mode" format="integer">
            <enum name="scroll" value="0x00000000"/>
            <enum name="fixed" value="0x00000001"/>
        </attr>
    </declare-styleable>
    <declare-styleable name="MaxHeightLinearLayout">
        <attr name="mhv_HeightRatio" format="reference|float" />
        <attr name="mhv_HeightDimen" format="reference|dimension" />
    </declare-styleable>
</resources>